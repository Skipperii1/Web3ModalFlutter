name: Build iOS App

on: workflow_dispatch
  # release:
  #   types: [published]

jobs:
  build_with_signing:
    runs-on: macos-latest
    
    steps:
    # Checkout the repo
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install the Apple certificate and provisioning profile
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
        P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        # create variables
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

        # import certificate and provisioning profile from secrets
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
        echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

        # create temporary keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

        # import certificate to keychain
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH

        # apply provisioning profile
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
    - uses: subosito/flutter-action@v2
      with:
        channel: "stable"
        architecture: x64
    # Generates package files
    - name: Generate package files
      run: |
        flutter pub get
        flutter pub run build_runner build --delete-conflicting-outputs
    - name: Generate example app files
      working-directory: example
      run: |
        flutter pub get
        flutter pub run build_runner build --delete-conflicting-outputs
    # Build ios app
    - name: Creating IPA
      env:
        PROJECT_ID: ${{ secrets.PROJECT_ID }}
      run: |
        FILE_VALUE=`cat lib/version.dart`
        VERSION=`echo $FILE_VALUE | sed "s/[^']*'\([^']*\)'.*/\1/"`
        VNAME=`echo $VERSION | sed "s/+.*//"`
        VBUILD=${VERSION#*+}
        cd example
        flutter build ipa --build-name $VNAME --build-number $VBUILD --dart-define="PROJECT_ID=$PROJECT_ID" --release
    # Run fastlane
    # - name: Delivering with fastlane
    #   working-directory: example/ios
    #   env:
    #     FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
    #     FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
    #   run: fastlane beta
    # - name: Get App Store Connect API Key
    #   uses: timheuer/base64-to-file@v1.2.4
    #   with:
    #     fileName: AuthKey_${{ secrets.APP_STORE_KEY_ID }}.p8
    #     fileDir: example/build/ios/ipa/private_keys
    #     encodedString: ${{ secrets.APP_STORE_CONNECT_KEY }}
    - name: Create p8 Auth Key
      env:
        APP_STORE_CONNECT_KEY: ${{ secrets.APP_STORE_CONNECT_KEY }}
        APP_STORE_KEY_ID: ${{ secrets.APP_STORE_KEY_ID }}
      run: |
        # Create private_keys folder
        mkdir -p example/build/ios/ipa/private_keys
        AUTH_KEY_PATH=example/build/ios/ipa/private_keys/AuthKey_$APP_STORE_KEY_ID.p8

        # import certificate and provisioning profile from secrets
        echo -n "$APP_STORE_CONNECT_KEY" | base64 --decode -o $AUTH_KEY_PATH
    - name: Upload IPA
      working-directory: example/build/ios/ipa
      env:
        APPLE_ISSUER_ID: ${{ secrets.APPLE_ISSUER_ID }}
        APP_STORE_KEY_ID: ${{ secrets.APP_STORE_KEY_ID }}
      run: xcrun altool --upload-app --type ios -f web3modal_flutter.ipa --apiKey $APP_STORE_KEY_ID --apiIssuer $APPLE_ISSUER_ID
    - name: Clean up keychain and provisioning profile
      if: ${{ always() }}
      run: |
        security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
        rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision
    - name: Clean up Flutter envs
      if: ${{ always() }}
      run: |
        flutter clean
        cd example
        flutter clean